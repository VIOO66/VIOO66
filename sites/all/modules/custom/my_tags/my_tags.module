
<?php
function my_tags_block_info() {
  // This example comes from node.module.
  $blocks = array();

  $blocks['my_first_block'] = array(
    'info' => t('My custom block'),
    // DRUPAL_CACHE_PER_ROLE will be assumed.
  );

  return $blocks;
}


function my_tags_block_view($delta = '') {
 
  $block = array();
  switch ($delta) {
    case 'my_first_block':
      $result = db_query('SELECT COUNT(`entity_id` ) icount, `field_tags_tid`, `taxonomy_term_data`.`name`, `revision_id`
FROM `field_data_field_tags`
INNER JOIN `taxonomy_term_data`
ON `taxonomy_term_data`.`tid`=`field_data_field_tags`.`field_tags_tid`
GROUP BY `field_tags_tid`
ORDER BY icount DESC
LIMIT 0 , 10');


      foreach ($result as $record) {
        
        $list[] = l($record->name, 'termpage/'.$record->field_tags_tid);

      }
      //dpm($list);

      $block['subject'] = t('Popular tags');
      $block['content'] = theme('item_list', array('items' => $list));;
      break;
  }

  return $block;
}
/**
* Implements hook_menu()
*/  
function my_tags_menu(){
 
 
 $items = array();

    $items ['termpage'] = array(
        'title' => t('Titlu'),    
        'page callback' => 'my_term_page',
        'page arguments' => array(1), 
        'access callback' => TRUE,
        );

    $items['my_form'] = array(
        'title' => 'Forma',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('form_ex'),
        'access callback' => TRUE,
        );

    $items ['results'] = array(
        'title' => t('Results'),    
        'page callback' => 'results',
        'access callback' => TRUE,
        );

    $items['edit_form/%'] = array(
        'title' => 'Forma',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('edit_form_up_test',1),
        'access callback' => TRUE,
        );


    return $items;            
}
  

function edit_form_up_test($form, &$form_state, $nodeid = NULL) {


$form['#prefix'] = '<div id="status">';
    $form['#suffix'] = '</div>';
    $form['mtitle'] = array(
    '#type' => 'textfield',
    '#title' => t('Title'),
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Submit',
    '#ajax' => array(
        'callback' => 'advanced_form_callback',
        'wrapper' => 'status',),
         );
  
  $form['#submit'] = array('edit_form_up_test_submit') ;
  return $form;

}

function advanced_form_callback($form, &$form_state)
{

  return $form;
}


function edit_form_up_test_submit($form, &$form_state) {
dpm($form_state);

$title = $form_state['values']['mtitle'];
$nid = $form_state ['build_info']['args'][0];
$node = node_load($nid);
$node->title = $title;
node_save($node);

}
function edit_form_up_test_validate($form, &$form_state) {


}


function form_ex ($form, &$form_state) {


$form['first_name'] = array(
'#required' => TRUE,
'#type' => 'textfield',
'#maxlength' => 30,
'#attributes' =>array('placeholder' => t('First Name')),
);
$form['last_name'] = array(
'#required' => TRUE,
'#type' => 'textfield',
'#maxlength' => 30,
'#attributes' =>array('placeholder' => t('Last Name')),
);
$age = range(16, 80);
$form['age_list']=array(
'#type'=>'select',
'#title' => t('Age'),
'#options' => drupal_map_assoc($age),
'#multiple' => false,
'#required' => TRUE,
);
$form['radio'] = array(
'#required' => TRUE,
'#title' => t('Select category'),
'#type' => 'radios',
'#options' => array(
'4' => t('Comedy'),
'2' => t('Action'),
'6' => t('Drama')),
);
$query = db_select('node', 'n');
$query->fields('n', array('title', 'nid'));
$query->join('field_data_field_category_m', 'f', 'n.nid = f.entity_id');
$query->join('taxonomy_term_data', 't', 'f.field_category_m_tid = t.tid');
$query->fields('t', array('name'));
$result = $query->execute();
foreach ($result as $row) {
if ($row -> name == 'Comedy') $items[0][$row->nid] = $row->title;
if ($row -> name == 'Action') $items[1][$row->nid] = $row->title;
if ($row -> name == 'Drama') $items[2][$row->nid] = $row->title;
}
$form['comedy_movies'] = array(
'#type' => 'fieldset',
'#title' => 'Choose a comedy movie',
);
$form['comedy_movies']['comedy'] = array(
'#type' => 'checkboxes',
'#options' => $items[0],
'#states' => array(
'visible' => array(
':input[name="radio"]' => array('value' => '4'),),
),
);
$form['action_movies'] = array(
'#type' => 'fieldset',
'#title' => 'Choose an action movie',
);
$form['action_movies']['action'] = array(
'#type' => 'checkboxes',
'#options' => $items[1],
'#states' => array(
'visible' => array(
':input[name="radio"]' => array('value' => '2'),),
),
);
$form['drama_movies'] = array(
'#type' => 'fieldset',
'#title' => 'Choose a drama movie',
);
$form['drama_movies']['drama'] = array(
'#type' => 'checkboxes',
'#options' => $items[2],
'#states' => array(
'visible' => array(
':input[name="radio"]' => array('value' => '6'),),
),
);
$form['submit'] = array(
'#type' => 'submit',
'#value' => 'Submit',
);
return $form;

  // $form['name'] = array(
  //   '#type' => 'textfield',
  //   '#title' => t('Name'),
  // );

 
  // Adds a simple submit button that refreshes the form and clears its
  // contents. This is the default behavior for forms.

}


function form_ex_submit($form, &$form_state) {
$first_name = $form_state['values']['first_name'];
$last_name = $form_state['values']['last_name'];
$age = $form_state['values']['age_list'];
$category = $form_state['values']['radio'];
if ($category == '4') $checked = $form_state['values']['comedy'];
if ($category == '2') $checked = $form_state['values']['action'];
if ($category == '6') $checked = $form_state['values']['drama'];
$result = array();
foreach ($checked as $key => $value) {
if($value != '0') $result[] = $value;
}
$insert = db_insert('my_form_modules')
->fields(array(
'fname' => $first_name,
'surname' => $last_name,
'age' => $age,
'category' => $category,
'movies' => serialize($result),
))
->execute();

}
function form_ex_validate($form, &$form_state) {

  $first_name = $form_state['values']['first_name'];
$last_name = $form_state['values']['last_name'];
if (strlen($first_name > 30)) form_set_error('name', t('First name could not be longer then 30 characters'));
if (strlen($last_name > 30)) form_set_error('name', t('Last name could not be longer then 30 characters'));
}


function my_term_page($nid=5){

 $query = new EntityFieldQuery();
 $query -> entityCondition('entity_type','node');
 $query -> fieldCondition('field_tags','tid',$nid);
 $result = $query -> execute();
 dpm($result);

  if (isset($result['node'])){
    $news_items_nids = array_keys($result['node']);
    $news_items = entity_load('node',$news_items_nids);
  }
dpm($news_items);

foreach ($news_items as $node) {
  $nodeView = node_view($node, 'teaser');
  $output[] = render($nodeView);
 
   }



// $node = node_load($nid);
// dpm($node);
// $out = node_view($node, 'teaser');
// $title = $node->title;
// $body = $node ->body['und'][0]['value'];


 return theme('item_list', array('items' => $output));
}


function results() {

$header = array('ID', 'First Name', 'Last Name', 'Age', 'Category', 'Movies', 'Edit');
$rows = array();

  $query = db_select('my_form_modules', 's');
$query->fields('s');
$query->join('taxonomy_term_data', 't', 's.category = t.tid');
$query->fields('t', array('name'));
$result = $query->execute();
foreach ($result as $key => $row)
{ 
$name = '';
$rrr = '';
$nodes = entity_load('node', unserialize($row->movies));
foreach ($nodes as $value)
{
$name = $name . $value->title . '</br>';
$rrr= $rrr . l(t('Edit'), 'edit_form/'.$value->nid). '</br>';
}

$rows[] = array($row->id_m, $row->fname, $row->surname, $row->age, $row->name, $name, $rrr);
}
  return theme('table', array('header' => $header, 'rows' => $rows));

}

/**
 * Allowing %user access
 */
function myaccess() {
    global $user;
    return user_access('user_access');
   }